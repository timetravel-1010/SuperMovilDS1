/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.clientes;

import controlador.ConnectionDB;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import modelo.Cliente;
import modelo.Linea;
import modelo.Plan;
import modelo.Planes;

/**
 *
 * @author Arman
 */
public class JPanelModificarNumero extends javax.swing.JPanel {

    

    private JPanelAdminLineas padre;
    private ConnectionDB conexion;
    private Linea lineaActualizar;
    private String numeroViejo;
    private Cliente clienteActualizar;
    /**
     * Creates new form JPanelModificarNumero
     */
    public JPanelModificarNumero(JPanelAdminLineas papa, Linea linea, Cliente cliente) {
        this.padre = papa;
        this.lineaActualizar = linea;
        this.numeroViejo = linea.getNumero();
        this.clienteActualizar = cliente;
        conexion = new ConnectionDB();
        initComponents();
        this.prepararCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTituloIzquierdo = new javax.swing.JLabel();
        jLabelPlan = new javax.swing.JLabel();
        jComboBoxPlan = new javax.swing.JComboBox<>();
        jLabelNumero = new javax.swing.JLabel();
        jTextNumero = new javax.swing.JTextField();
        jButtonGenerar = new javax.swing.JButton();
        jButtonEnviar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTituloIzquierdo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelTituloIzquierdo.setText("Modificar numero:");
        add(jLabelTituloIzquierdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 120, 30));

        jLabelPlan.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelPlan.setText("Plan Pospago");
        add(jLabelPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 100, 30));

        jComboBoxPlan.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jComboBoxPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPlanActionPerformed(evt);
            }
        });
        add(jComboBoxPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 315, 30));

        jLabelNumero.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelNumero.setText("Numero de telefono");
        add(jLabelNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 140, 30));

        jTextNumero.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNumerojTextCedulaActionPerformed(evt);
            }
        });
        jTextNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextNumeroKeyTyped(evt);
            }
        });
        add(jTextNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 200, 30));

        jButtonGenerar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonGenerar.setText("Generar");
        jButtonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarjButtonEnviarActionPerformed(evt);
            }
        });
        add(jButtonGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 100, 30));

        jButtonEnviar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarjButtonEnviarActionPerformed(evt);
            }
        });
        add(jButtonEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 100, 30));

        jButtonCancelar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 100, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPlanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPlanActionPerformed

    private void jTextNumerojTextCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNumerojTextCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNumerojTextCedulaActionPerformed

    private void jTextNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNumeroKeyTyped
        // TODO add your handling code here:
        if(jTextNumero.getText().length() >= 10) evt.consume(); //Que solo acepte max 10 digitos
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) evt.consume();//Que solo acepte numeros
    }//GEN-LAST:event_jTextNumeroKeyTyped

    private void jButtonGenerarjButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarjButtonEnviarActionPerformed
        // TODO add your handling code here:
        jTextNumero.setText(this.generarNumero());
    }//GEN-LAST:event_jButtonGenerarjButtonEnviarActionPerformed

    private void jButtonEnviarjButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarjButtonEnviarActionPerformed
        // TODO add your handling code here:
        boolean permiso = true;
        if(jTextNumero.getText().isBlank()){//Si esta vacio, no se procede
            JOptionPane.showMessageDialog(null, "¡Ingrese un numero de telefono!",
                            "Numero vacio", JOptionPane.ERROR_MESSAGE);
            permiso = false;
        }
        if(permiso){
            if(jTextNumero.getText().length()==10){//Se valida que sea un numero valido
            if(conexion.validarLinea(jTextNumero.getText()) && !this.jTextNumero.getText().equals(this.numeroViejo)){//El numero ya existe
                JOptionPane.showMessageDialog(null, "¡El numero ingresado ya se encuentra en uso!",
                    "Numero encontrado", JOptionPane.ERROR_MESSAGE);
                permiso = false;
            }
                } else {//Es un numero invalido
                    JOptionPane.showMessageDialog(null, "¡Ingrese un numero telefonico valido",
                        "Numero invalido", JOptionPane.ERROR_MESSAGE);
                    permiso = false;
                    }
        }
                
        if(permiso){//Si paso las validaciones, se procede
            int idPlan = jComboBoxPlan.getSelectedIndex()+1;
            String numeroNuevo = jTextNumero.getText();
            Boolean resultadoActualizarLinea = conexion.updateLinea(this.numeroViejo, idPlan, numeroNuevo);
            if(resultadoActualizarLinea){//Se pudo actualizar la linea
                JOptionPane.showMessageDialog(null, "¡La actualizacion de la linea telefonica fue exitosa!",
                    "Actualizacion exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else {//Fallo la actualizacion de la linea
                JOptionPane.showMessageDialog(null, "¡No se pudo realizar la actualizacion de la linea!",
                    "Actualizacion fallida", JOptionPane.ERROR_MESSAGE);
            }
            //Independientemente de lo que suceda, se tiene que cerrar el jframe
            padre.eliminarPanel();
            padre.enableButtons(true);
            padre.pintarPanel(new JPanelTablaLineas(this.padre, this.clienteActualizar), 0, 0);
        }
    }//GEN-LAST:event_jButtonEnviarjButtonEnviarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        padre.eliminarPanel();
        padre.enableButtons(true);
        padre.pintarPanel(new JPanelTablaLineas(this.padre, this.clienteActualizar), 0, 0);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private String generarNumero(){//Metodo que genera un numero que no se encuentre registrado
        Random ran = new Random();
        int segundoDigito = ran.nextInt(3) + 0;
        String numero = "3"+segundoDigito;
        int tercerDigito;
        if(segundoDigito==2){//caso en que el numero es 32XXXXXXXX
            tercerDigito= ran.nextInt(4) + 0;
            numero = numero+tercerDigito;
        } else {//Cualquier otro caso
            tercerDigito= ran.nextInt(10) + 0;
            numero = numero+tercerDigito;
        }
        //Hasta este momento el numero tiene 3 digitos
        int digitoAuxiliar;
        for(int i = 0; i<7; i++){//Se le concatenan numeros del 0 al 9 hsta completar 10 digitos
            digitoAuxiliar = ran.nextInt(10) + 0;
            numero = numero+digitoAuxiliar;
        }
        //En este punto ya se genero un numero aleatorio y aunque es muy dificil que ya se haya registrado, va a ser necesario validarlo luego.
        return numero;
    }
    /* Metodo antes del merge 
    private void prepararCampos(){//Metodo que alista el formulario con los datos previos
        ArrayList<Plan> planes = conexion.getPlanes();//Se obtienen los planes disponibles para mostrarlos en el combobox
        for(int i = 0; i<planes.size(); i++){
            jComboBoxPlan.addItem((planes.get(i)).getNombre());
        }
        this.jTextNumero.setText(this.lineaActualizar.getNumero());//Se holdea el txt con el numero viejo
        this.jComboBoxPlan.setSelectedIndex(this.lineaActualizar.getPlan()-1);
    }*/
    
    private void prepararCampos(){//Metodo que alista el formulario con los datos previos
        ArrayList<Planes> planes = conexion.getPlanes();//Se obtienen los planes disponibles para mostrarlos en el combobox
        for(int i = 0; i<planes.size(); i++){
            jComboBoxPlan.addItem((planes.get(i)).getNombre());
        }
        this.jTextNumero.setText(this.lineaActualizar.getNumero());//Se holdea el txt con el numero viejo
        this.jComboBoxPlan.setSelectedIndex(this.lineaActualizar.getPlan()-1);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonGenerar;
    public javax.swing.JComboBox<String> jComboBoxPlan;
    private javax.swing.JLabel jLabelNumero;
    private javax.swing.JLabel jLabelPlan;
    public javax.swing.JLabel jLabelTituloIzquierdo;
    public javax.swing.JTextField jTextNumero;
    // End of variables declaration//GEN-END:variables
}
