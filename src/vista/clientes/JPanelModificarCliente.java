/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.clientes;

import controlador.ConnectionDB;
import enums.TipoCliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import modelo.Cliente;
import modelo.Cuenta;

/**
 *
 * @author Arman
 */
public class JPanelModificarCliente extends javax.swing.JPanel {

    
    private Cliente clienteActualizar;
    private JPanelAdminClientes padreModificar;
    private ConnectionDB conexion;
    /**
     * Creates new form JPanelModificarCliente
     */
    public JPanelModificarCliente(JPanelAdminClientes papa, Cliente cliente) {
        this.padreModificar = papa;
        this.clienteActualizar = cliente;
        conexion = new ConnectionDB();
        initComponents();
        this.prepararUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTituloIzquierdo = new javax.swing.JLabel();
        jLabelCedula = new javax.swing.JLabel();
        jTextCedula = new javax.swing.JTextField();
        jLabelNombre = new javax.swing.JLabel();
        jTextNombre = new javax.swing.JTextField();
        jLabelTelefono = new javax.swing.JLabel();
        jTextTelefono = new javax.swing.JTextField();
        jLabelCiudad = new javax.swing.JLabel();
        jTextCiudad = new javax.swing.JTextField();
        jLabelDireccion = new javax.swing.JLabel();
        jTextDireccion = new javax.swing.JTextField();
        jLabelTipo = new javax.swing.JLabel();
        jComboBoxTipo = new javax.swing.JComboBox<>();
        jButtonEnviar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setBackground(new java.awt.Color(218, 234, 255));
        setMinimumSize(new java.awt.Dimension(555, 555));
        setPreferredSize(new java.awt.Dimension(555, 555));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTituloIzquierdo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelTituloIzquierdo.setForeground(new java.awt.Color(0, 0, 0));
        jLabelTituloIzquierdo.setText("Datos basicos del cliente:");
        add(jLabelTituloIzquierdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 210, 30));

        jLabelCedula.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelCedula.setForeground(new java.awt.Color(0, 0, 0));
        jLabelCedula.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCedula.setText("Identificacion:");
        add(jLabelCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 120, 30));

        jTextCedula.setBackground(new java.awt.Color(149, 193, 255));
        jTextCedula.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextCedula.setForeground(new java.awt.Color(0, 0, 0));
        jTextCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCedulajTextCedulaActionPerformed(evt);
            }
        });
        jTextCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCedulaKeyTyped(evt);
            }
        });
        add(jTextCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 230, 30));

        jLabelNombre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelNombre.setForeground(new java.awt.Color(0, 0, 0));
        jLabelNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNombre.setText("Nombre:");
        add(jLabelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 120, 30));


        jTextNombre.setBackground(new java.awt.Color(149, 193, 255));
        jTextNombre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextNombre.setForeground(new java.awt.Color(0, 0, 0));
        jTextNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextNombreKeyTyped(evt);
            }
        });
        add(jTextNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 230, 30));

        jLabelTelefono.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelTelefono.setForeground(new java.awt.Color(0, 0, 0));
        jLabelTelefono.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTelefono.setText("Telefono:");
        add(jLabelTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 120, 30));

        jTextTelefono.setBackground(new java.awt.Color(149, 193, 255));
        jTextTelefono.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextTelefono.setForeground(new java.awt.Color(0, 0, 0));
        jTextTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextTelefonojTextTelefonoActionPerformed(evt);
            }
        });
        jTextTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextTelefonoKeyTyped(evt);
            }
        });
        add(jTextTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 230, 30));

        jLabelCiudad.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelCiudad.setForeground(new java.awt.Color(0, 0, 0));
        jLabelCiudad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCiudad.setText("Ciudad:");
        add(jLabelCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 120, 30));


        jTextCiudad.setBackground(new java.awt.Color(149, 193, 255));
        jTextCiudad.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextCiudad.setForeground(new java.awt.Color(0, 0, 0));
        jTextCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCiudadKeyTyped(evt);
            }
        });
        add(jTextCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 230, 30));

        jLabelDireccion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelDireccion.setForeground(new java.awt.Color(0, 0, 0));
        jLabelDireccion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDireccion.setText("Direccion:");
        add(jLabelDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 120, 30));

        jTextDireccion.setBackground(new java.awt.Color(149, 193, 255));
        jTextDireccion.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextDireccion.setForeground(new java.awt.Color(0, 0, 0));
        jTextDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextDireccionKeyTyped(evt);
            }
        });
        add(jTextDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, 230, 30));

        jLabelTipo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelTipo.setForeground(new java.awt.Color(0, 0, 0));
        jLabelTipo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTipo.setText("Tipo:");
        add(jLabelTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 120, 30));

        jComboBoxTipo.setBackground(new java.awt.Color(149, 193, 255));
        jComboBoxTipo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jComboBoxTipo.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "natural", "corporativo" }));
        jComboBoxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoActionPerformed(evt);
            }
        });
        add(jComboBoxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, 231, 30));

        jButtonEnviar.setBackground(new java.awt.Color(149, 193, 255));
        jButtonEnviar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonEnviar.setForeground(new java.awt.Color(0, 0, 0));
        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarjButtonEnviarActionPerformed(evt);
            }
        });
        add(jButtonEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 500, 110, 30));

        jButtonCancelar.setBackground(new java.awt.Color(149, 193, 255));
        jButtonCancelar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonCancelar.setForeground(new java.awt.Color(0, 0, 0));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, 110, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextCedulajTextCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCedulajTextCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCedulajTextCedulaActionPerformed

    private void jTextCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCedulaKeyTyped
        // TODO add your handling code here:
        if(jTextCedula.getText().length() >= 10) evt.consume(); //Que solo acepte max 10 digitos
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) evt.consume();//Que solo acepte numeros
    }//GEN-LAST:event_jTextCedulaKeyTyped

    private void jTextNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNombreKeyTyped
        // TODO add your handling code here:
        if(jTextNombre.getText().length() >= 100) evt.consume(); //Que solo acepte max 100 digitos
        int key = evt.getKeyChar();
        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        if (!(minusculas || mayusculas || espacio)) evt.consume();//Que solo acepte letras
    }//GEN-LAST:event_jTextNombreKeyTyped

    private void jTextTelefonojTextTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextTelefonojTextTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextTelefonojTextTelefonoActionPerformed

    private void jTextTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTelefonoKeyTyped
        // TODO add your handling code here:
        if(jTextTelefono.getText().length() >= 10) evt.consume(); //Que solo acepte max 10 digitos
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) evt.consume();//Que solo acepte numeros
    }//GEN-LAST:event_jTextTelefonoKeyTyped

    private void jTextCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCiudadKeyTyped
        // TODO add your handling code here:
        if(jTextCiudad.getText().length() >= 100) evt.consume(); //Que solo acepte max 100 digitos
    }//GEN-LAST:event_jTextCiudadKeyTyped

    private void jTextDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextDireccionKeyTyped
        // TODO add your handling code here:
        if(jTextDireccion.getText().length() >= 100) evt.consume(); //Que solo acepte max 100 digitos
    }//GEN-LAST:event_jTextDireccionKeyTyped

    private void jComboBoxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipoActionPerformed

    private void jButtonEnviarjButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarjButtonEnviarActionPerformed
        // TODO add your handling code here:
         //Se capturan los datos del cliente para registrarlo o actualizarlo
        String cedula = jTextCedula.getText();
        String nombre = jTextNombre.getText();
        String telefono = jTextTelefono.getText();
        String direccion = jTextDireccion.getText();
        String ciudad = jTextCiudad.getText();
        if(this.validarActualizarCliente()){//Se hace una validación sobre los campos de datos del usuario
            this.actualizarCliente(cedula, nombre, telefono, direccion, ciudad);
        }
    }//GEN-LAST:event_jButtonEnviarjButtonEnviarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        padreModificar.eliminarPanel();
        padreModificar.enableAll(true);
        JPanel panelAux = new JPanel();
        panelAux.setBackground(new java.awt.Color(218, 234, 255));
        padreModificar.pintarPanel(panelAux, 100, 20);
        padreModificar.enableMRS(false, false, false, false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreActionPerformed

    private void jTextCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCiudadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCiudadActionPerformed

    private boolean validarActualizarCliente(){
        boolean exito = true;
        
        if(jTextCedula.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "¡Ingrese una cedula valida!",
                            "Validacion incorrecta", JOptionPane.ERROR_MESSAGE);
            exito = false;
        }
        
        if(jTextNombre.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "¡Ingrese un nombre valido!",
                            "Validacion incorrecta", JOptionPane.ERROR_MESSAGE);
            exito = false;
        }
        
        if(jTextTelefono.getText().length()<7){
            JOptionPane.showMessageDialog(null, "¡Ingrese una numero telefonico valido!",
                            "Validacion incorrecta", JOptionPane.ERROR_MESSAGE);
            exito = false;
        }
        
        if(jTextCiudad.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "¡Ingrese una ciudad valida!",
                            "Validacion incorrecta", JOptionPane.ERROR_MESSAGE);
            exito = false;
        }
        
        if(jTextDireccion.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "¡Ingrese una direccion valida!",
                            "Validacion incorrecta", JOptionPane.ERROR_MESSAGE);
            exito = false;
        }
        
        return exito;
    }
    
        private void actualizarCliente(String cedula, String nombre, String telefono, String direccion, String ciudad){
        boolean resultadoActualizarCliente = conexion.updateCliente(cedula, nombre, telefono, direccion, ciudad);//Se hace la consulta
        if(resultadoActualizarCliente){//Si se pudieron actualizar los datos del cliente.
            JOptionPane.showMessageDialog(null, "¡La actualizacion de los datos del cliente fue exitosa!",
                    "Actualizacion exitosa", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "¡No se pudo realizar la actualización de los datos del cliente!",
                                "Actualizacion fallida", JOptionPane.ERROR_MESSAGE);
        }
        padreModificar.enableAll(true);
        padreModificar.eliminarPanel();
        JPanel panelAux = new JPanel();
        panelAux.setBackground(new java.awt.Color(218, 234, 255));
        padreModificar.pintarPanel(panelAux, 100, 20);
        padreModificar.enableMRS(false, false, false, false);
    }
    
    private void prepararUpdate(){//Metodo que trae los datos del cliente a actualizar y llena los campos y los bloquea
        //Se holdean todos los parametros del panel izquierdo
        jTextCedula.setText(clienteActualizar.getCedula());
        jTextCedula.setEnabled(false);
        jTextNombre.setText(clienteActualizar.getNombre());
        jTextTelefono.setText(clienteActualizar.getTelefono());
        jTextCiudad.setText(clienteActualizar.getCiudad());
        jTextDireccion.setText(clienteActualizar.getDireccion());
        int n;
        if(clienteActualizar.getTipo()==TipoCliente.natural){
            n=0;
        } else {
            n=1;
        }
        jComboBoxTipo.setSelectedIndex(n);
        jComboBoxTipo.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEnviar;
    public javax.swing.JComboBox<String> jComboBoxTipo;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JLabel jLabelCiudad;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelTipo;
    public javax.swing.JLabel jLabelTituloIzquierdo;
    public javax.swing.JTextField jTextCedula;
    public javax.swing.JTextField jTextCiudad;
    public javax.swing.JTextField jTextDireccion;
    public javax.swing.JTextField jTextNombre;
    public javax.swing.JTextField jTextTelefono;
    // End of variables declaration//GEN-END:variables
}
