package vista.clientes;

import vista.usuarios.*;
import controlador.ConnectionDB;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Usuario;

/**
 *
 * @author cristian
 */
public class JPanelTablaClientes extends javax.swing.JPanel {
    private ConnectionDB db;
    private JPanelAdministrarUsuarios padre;
    private DefaultTableModel modeloT;  
    
    public JPanelTablaClientes(JPanelAdministrarUsuarios papa) {
        padre=papa;
        db = new ConnectionDB();
        modeloT = new DefaultTableModel();
        String [] titulo = new String[]{"Cedula", "Nombre", "Telefono", "Direccion", "Nombre_usuario", "password", "estado", "Rol", "Status_login"};
        modeloT.setColumnIdentifiers(titulo);
        initComponents();
        tablaClientes.setModel(modeloT);
        
        //this.agregarTodos();
    }

    public JPanelTablaClientes() {
        db = new ConnectionDB();
        modeloT = new DefaultTableModel();
        String [] titulo = new String[]{"Cedula", "Nombre", "Telefono", "Direccion", "Ciudad", "Tipo"};
        
        
        modeloT.setColumnIdentifiers(titulo);
        initComponents();
        tablaClientes.setModel(modeloT);
        //this.agregarTodos();
        this.setVisible(true);
        this.revalidate();
        this.repaint();
    }
    
    public void agregarTodos(){
        List<Cliente> lista = db.getClientes();
        
        for(int i =0; i<lista.size();i++){
            modeloT.addRow(new Object[]{
                lista.get(i).getCedula(),
                lista.get(i).getNombre(),
                lista.get(i).getTelefono(),
                lista.get(i).getDireccion(),
                lista.get(i).getCiudad(),
                lista.get(i).getTipo()
            });            
            System.out.println("Nombre "+i+": "+lista.get(i).getNombre());
        }
        this.revalidate();
        this.repaint();
        System.out.println("Entra y sale.");
    }
    
    public void agregarSelectivo(String nombreU){
        List<Cliente> lista = db.getClientes();
        
        for(int i =0; i<lista.size();i++){
            modeloT.addRow(new Object[]{
                lista.get(i).getCedula(),
                lista.get(i).getNombre(),
                lista.get(i).getTelefono(),
                lista.get(i).getDireccion(),
                lista.get(i).getCiudad(),
                lista.get(i).getTipo()
            });            
        }
        this.revalidate();
        this.repaint();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPanelDatosUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPanelDatosUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPanelDatosUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPanelDatosUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold> 

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               //new JPanelTablaClientes();
            }
        });
        
    }
     
     
     public String indexTabla() {
         int row = tablaClientes.getSelectedRow();
         String cedula = tablaClientes.getValueAt(row, 0).toString();
         return cedula;
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable(){
            public boolean editCellAt(int row, int column, java.util.EventObject e) {
                return false;
            }
        }
        ;

        setMinimumSize(new java.awt.Dimension(890, 510));
        setPreferredSize(new java.awt.Dimension(890, 510));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Telefono", "Direccion", "Ciudad", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClientes.setAlignmentX(0.0F);
        tablaClientes.setAlignmentY(0.0F);
        tablaClientes.setPreferredSize(new java.awt.Dimension(890, 510));
        tablaClientes.getTableHeader().setReorderingAllowed(false);
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -2, 500, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        if (tablaClientes.getSelectedRow() != -1) {
            padre.enableMAD(true);
        }
    }//GEN-LAST:event_tablaClientesMouseClicked
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
