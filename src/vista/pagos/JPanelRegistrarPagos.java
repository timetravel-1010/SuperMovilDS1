/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.pagos;

import controlador.ConnectionDB;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Manuel
 */
public class JPanelRegistrarPagos extends javax.swing.JPanel {

    private ConnectionDB db;
    private JPanelPagos padreAdmin;
    private JPanel panelActual;

    /**
     * Creates new form JPanelPagos
     */
    public JPanelRegistrarPagos(JPanelPagos papa, ConnectionDB db) {
        initComponents();
        this.db = db;
        panelActual = new JPanel();
        this.panelActual.setBackground(new java.awt.Color(218, 234, 255));
        this.add(panelActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 890, 490));
        padreAdmin = papa;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelNumeroFactura = new javax.swing.JLabel();
        jLabelValorPagado = new javax.swing.JLabel();
        jTextFieldValorPagado = new javax.swing.JTextField();
        jTextFieldNumeroFactura = new javax.swing.JTextField();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setBackground(new java.awt.Color(218, 234, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pago Factura:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 148, 30));

        jLabelNumeroFactura.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelNumeroFactura.setForeground(new java.awt.Color(0, 0, 0));
        jLabelNumeroFactura.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNumeroFactura.setText("Numero de factura:");
        add(jLabelNumeroFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 110, 180, 30));

        jLabelValorPagado.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabelValorPagado.setForeground(new java.awt.Color(0, 0, 0));
        jLabelValorPagado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelValorPagado.setText("Valor a pagar:");
        add(jLabelValorPagado, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 180, 180, 30));

        jTextFieldValorPagado.setBackground(new java.awt.Color(149, 193, 255));
        jTextFieldValorPagado.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextFieldValorPagado.setForeground(new java.awt.Color(0, 0, 0));
        add(jTextFieldValorPagado, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 180, 200, 30));

        jTextFieldNumeroFactura.setBackground(new java.awt.Color(149, 193, 255));
        jTextFieldNumeroFactura.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jTextFieldNumeroFactura.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumeroFacturaActionPerformed(evt);
            }
        });
        add(jTextFieldNumeroFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 110, 200, 30));

        jButtonRegistrar.setBackground(new java.awt.Color(149, 193, 255));
        jButtonRegistrar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonRegistrar.setForeground(new java.awt.Color(0, 0, 0));
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });
        add(jButtonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 250, -1, -1));

        jButtonCancelar.setBackground(new java.awt.Color(149, 193, 255));
        jButtonCancelar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButtonCancelar.setForeground(new java.awt.Color(0, 0, 0));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 250, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNumeroFacturaActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        // TODO add your handling code here:
        boolean resultado;
        Integer pagoRealizado;
        Integer valorPagar;
        Integer numeroFactura = Integer.parseInt(jTextFieldNumeroFactura.getText());
        Integer ValorPagado = Integer.parseInt(jTextFieldValorPagado.getText());
        
        
        pagoRealizado = db.consultarPagoRealizado(numeroFactura);
        
        
        
        if (pagoRealizado == 0) {
            valorPagar = db.consultarValorPago(numeroFactura);
            if (valorPagar.equals(ValorPagado)){
                resultado = db.registrarPago(numeroFactura, ValorPagado);

                if (resultado) {
                    try {
                        db.modificarFechaPago(numeroFactura);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(null, "¡El registro del pago de factura fue exitoso!",
                            "Registro", JOptionPane.INFORMATION_MESSAGE);
                    padreAdmin.eliminarPanel();
                    padreAdmin.enableButtons(true);
                } else {
                    JOptionPane.showMessageDialog(null, "¡No se realizó ninguna modificación!",
                                "Registro", JOptionPane.ERROR_MESSAGE);
                    padreAdmin.eliminarPanel();
                    padreAdmin.enableButtons(true);
                }

            } else {
                if (!db.consultarFactura(numeroFactura)){
                    JOptionPane.showMessageDialog(null, "¡La factura no existe!",
                                "Registro", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "¡El pago de la factura es incorrecto! El usuario debe pagar: "+ valorPagar,
                                "Registro", JOptionPane.ERROR_MESSAGE);
                }
            }            
        } else {

                JOptionPane.showMessageDialog(null, "¡El usuario ya pagó la factura ingresada!",
                                "Registro", JOptionPane.ERROR_MESSAGE);
            
            padreAdmin.eliminarPanel();
            padreAdmin.enableButtons(true);
        }
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        
        //Borrar esto
        ArrayList<Integer> cuentasPagadas = new ArrayList(); 
        ArrayList<Integer> cuentasNoPagadas = new ArrayList();
        try {
            cuentasPagadas = db.facturasFechaLimitePagada();
        } catch (ParseException ex) {
            Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            cuentasNoPagadas = db.facturasFechaLimiteNoPagada();
        } catch (ParseException ex) {
            Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(Integer cuenta :cuentasPagadas) {
            
            Integer minutosUsados = db.consultarMinutosUsados(cuenta);
            Integer minutosPlan = db.consultarMinutosPlan(cuenta);
            Integer precioPlan = db.consultarPrecioPlan(cuenta);
            
            Integer ultimaFactura = db.consultarUltimaFactura(cuenta);
            Integer numeroFactura = null;
            try {
                numeroFactura = db.consultarFacturaCuenta(cuenta);
            } catch (ParseException ex) {
                Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            System.out.println(ultimaFactura +" = "+ numeroFactura);
            if (ultimaFactura == numeroFactura) {

                if (minutosUsados > minutosPlan) {
                    Integer totalPagar =  precioPlan + precioPlan/minutosPlan*minutosUsados;
                    try {
                        db.registrarFactura(cuenta, totalPagar);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    try {
                        db.registrarFactura(cuenta, precioPlan);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
          
        }
        
        for(Integer cuenta :cuentasNoPagadas) {
            
            Integer minutosUsados = db.consultarMinutosUsados(cuenta);
            Integer minutosPlan = db.consultarMinutosPlan(cuenta);
            Integer precioPlan = db.consultarPrecioPlan(cuenta);
            Integer ultimaFactura = db.consultarUltimaFactura(cuenta);
            Integer deudaAnterior = null;
            
            Integer numeroFactura = null;
            try {
                numeroFactura = db.consultarFacturaAnterior(cuenta);
            } catch (ParseException ex) {
                Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if (ultimaFactura == numeroFactura) {
                try {
                    deudaAnterior = db.consultarDeudaAnterior(cuenta);
                } catch (ParseException ex) {
                    Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (minutosUsados > minutosPlan) {
                    Integer totalPagar =  precioPlan + precioPlan/minutosPlan*minutosUsados + deudaAnterior;
                    try {
                        db.registrarFactura(cuenta, totalPagar);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    try {
                        db.registrarFactura(cuenta, precioPlan+deudaAnterior);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelRegistrarPagos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                db.registrarPago(numeroFactura, 0);
                
            }
        }    
        
               
        //-------------Borrar-------------------//
        padreAdmin.eliminarPanel();
        padreAdmin.enableButtons(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNumeroFactura;
    private javax.swing.JLabel jLabelValorPagado;
    private javax.swing.JTextField jTextFieldNumeroFactura;
    private javax.swing.JTextField jTextFieldValorPagado;
    // End of variables declaration//GEN-END:variables
}
